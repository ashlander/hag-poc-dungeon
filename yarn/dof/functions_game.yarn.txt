// Add empty block
title: DofFunctionAddEmptyBlock
---
    // TODO type=gap
    <<hagHighlightBlockSet type=image>>
===

// Add player image
title: DofFunctionAddPlayerImage
---
    // TODO look depends on equipment

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageCommonPlayer}">>
===

/**
 * @brief Add npc stats
 * @param DofFunctionAddNpcStats_actor Actor name with stats
 */
title: DofFunctionAddNpcStats
---
    <<hagHighlightBlockSet type=value>>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateConstitution}"   value=$_actor.$dofStatConstitution  path="{$dofImageConstitution}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateListen}"         value=$_actor.$dofStatListen        path="{$dofImageListen}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslatePerception}"     value=$_actor.$dofStatPerception    path="{$dofImagePerception}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateSneak}"          value=$_actor.$dofStatSneak         path="{$dofImageSneak}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateSpeed}"          value=$_actor.$dofStatSpeed         path="{$dofImageSpeed}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateAttack}"         value=$_actor.$dofStatAttack        path="{$dofImageAttack}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateDefense}"        value=$_actor.$dofStatDefense       path="{$dofImageDefense}">>
===

/**
 * @brief Add npc stats, output '?' instead of stat if not visible
 * @param DofFunctionAddNpcVisibleStats_actor Actor name with stats
 */
title: DofFunctionAddNpcVisibleStats
---
    <<if $_actor.$dofVisibilityRate >= 7>>
        <<set $DofFunctionAddNpcStats_actor to $_actor>>
        <<hagCallNode name="DofFunctionAddNpcStats">>
    <<else>>
        <<hagHighlightBlockSet type=value>>

        <<if $_actor.$dofHideStatConstitution>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatConstitution}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateConstitution}"   value=$_value path="{$dofImageConstitution}">>

        <<if $_actor.$dofHideStatListen>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatListen}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateListen}"         value=$_value path="{$dofImageListen}">>

        <<if $_actor.$dofHideStatPerception>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatPerception}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslatePerception}"     value=$_value path="{$dofImagePerception}">>

        <<if $_actor.$dofHideStatSneak>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatSneak}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateSneak}"          value=$_value path="{$dofImageSneak}">>

        <<if $_actor.$dofHideStatSpeed>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatSpeed}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateSpeed}"          value=$_value path="{$dofImageSpeed}">>

        <<if $_actor.$dofHideStatAttack>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatAttack}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateAttack}"         value=$_value path="{$dofImageAttack}">>

        <<if $_actor.$dofHideStatDefense>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatDefense}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd text="{$dofTranslateDefense}"        value=$_value path="{$dofImageDefense}">>
    <<endif>>
===


/**
 * @brief Add npc stats without description (short form)
 * @param DofFunctionAddNpcStatsShort_actor Actor name with stats
 */
title: DofFunctionAddNpcStatsShort
---
    <<hagHighlightBlockSet type=value>>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatConstitution  path="{$dofImageConstitution}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatListen        path="{$dofImageListen}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatPerception    path="{$dofImagePerception}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatSneak         path="{$dofImageSneak}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatSpeed         path="{$dofImageSpeed}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatAttack        path="{$dofImageAttack}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofStatDefense       path="{$dofImageDefense}">>
===

/**
 * @brief Add npc stats without description (short form), output '?' instead of stat if not visible
 * @param DofFunctionAddNpcVisibleStatsShort_actor Actor name with stats
 */
title: DofFunctionAddNpcVisibleStatsShort
---
    <<if $_actor.$dofVisibilityRate >= 7>>
        <<set $DofFunctionAddNpcStatsShort_actor to $_actor>>
        <<hagCallNode name="DofFunctionAddNpcStatsShort">>
    <<else>>
        <<hagHighlightBlockSet type=value>>

        <<if $_actor.$dofHideStatConstitution>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatConstitution}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageConstitution}">>

        <<if $_actor.$dofHideStatListen>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatListen}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageListen}">>

        <<if $_actor.$dofHideStatPerception>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatPerception}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImagePerception}">>

        <<if $_actor.$dofHideStatSneak>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatSneak}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageSneak}">>

        <<if $_actor.$dofHideStatSpeed>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatSpeed}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageSpeed}">>

        <<if $_actor.$dofHideStatAttack>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatAttack}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageAttack}">>

        <<if $_actor.$dofHideStatDefense>>
            <<set $_value to "?">>
        <<else>>
            <<set $_value to "{$_actor.$dofStatDefense}">>
        <<endif>>
        <<hagHighlightBlockNoteAdd value=$_value path="{$dofImageDefense}">>

    <<endif>>
===

/**
 * @brief Add npc secondary stats
 * @param DofFunctionAddNpcSecondaryStats_actor Actor name with stats
 */
title: DofFunctionAddNpcSecondaryStats
---
    <<hagHighlightBlockSet type=value>>
    <<set $_maxhp to $_actor.$dofStatConstitution * $dofHPperConstitution>>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateHP}"         value="{$_actor.$dofHP}/{$_maxhp}"  path="{$dofImageHP}">>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateMoney}"      value=$_actor.$dofGold              path="{$dofImageCoin}">>
===

/**
 * @brief Add npc secondary stats without text
 * @param DofFunctionAddNpcSecondaryStatsShort_actor Actor name with stats
 */
title: DofFunctionAddNpcSecondaryStatsShort
---
    <<hagHighlightBlockSet type=value>>
    <<set $_maxhp to $_actor.$dofStatConstitution * $dofHPperConstitution>>
    <<hagHighlightBlockNoteAdd value="{$_actor.$dofHP}/{$_maxhp}"  path="{$dofImageHP}">>
    <<hagHighlightBlockNoteAdd value=$_actor.$dofGold              path="{$dofImageCoin}">>
===


// Add current players stats
title: DofFunctionAddPlayerStats
---
    <<set $DofFunctionAddNpcStats_actor to "dofPlayer">>
    <<hagCallNode name="DofFunctionAddNpcStats">>
===

title: DofFunctionAddPlayerStatsWithPoints
---
    <<hagCallNode name="DofFunctionAddPlayerImage">>
    <<hagCallNode name="DofFunctionAddPlayerStats">>
    <<hagCallNode name="DofFunctionAddEmptyBlock">>

    <<hagCallNode name="DofFunctionAddEmptyBlock">>
    <<hagCallNode name="DofFunctionAddNewPlayerStatPoints">>
    <<hagCallNode name="DofFunctionAddEmptyBlock">>
===

// Add left stat points to distribute
title: DofFunctionAddNewPlayerStatPoints
---
    <<if $dofPlayer.dofStatPointsLeft > 0>>
        <<set $dofValueColor to $dofColorValue>>
    <<elseif $dofPlayer.dofStatPointsLeft == 0>>
        <<set $dofValueColor to $dofColorOKValue>>
    <<elseif $dofPlayer.dofStatPointsLeft < 0>>
        <<set $dofValueColor to $dofColorNOKValue>>
    <<endif>>

    <<hagHighlightBlockSet type=info>>
    <<hagHighlightBlockNoteAdd text="{$dofValueColor}{$dofPlayer.dofStatPointsLeft}{$dofColorEnd} points left to distribute">> #line:469ec8
===

// Add current players stats level up menu group
title: DofFunctionAddPlayerStatsLevelUp
---
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageStatsLevelUp}">>
===

// Add current players fobia level up menu group
title: DofFunctionAddPlayerFobiaLevelUp
---
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageFobiaLevelUp}">>
===

// Add current players each stat as levelup menu group
title: DofFunctionAddPlayerStatsEachLevelUp
---
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageConstitution}" onclick="Constitution">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageListen}" onclick="Listen">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImagePerception}" onclick="Perception">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageSneak}" onclick="Sneak">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageSpeed}" onclick="Speed">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageAttack}" onclick="Attack">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageMenuArrowLeft}" onclick="Back">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageDefense}" onclick="Defense">>

===


// Add inventory title
title: DofFunctionAddPlayerInventoryTitle
---
    // add inventory title
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateInventory}">>
===

// Add inventory items
title: DofFunctionAddPlayerInventory
---
    <<set $dofIndex            to 0>>
    <<while $dofIndex is not $dofPlayer.dofInventorySize>>
        <<set $dofItemSlot to "{$dofNameInventorySlot}{$dofIndex}">>

        <<hagHighlightBlockSet type=image>>
        <<if $dofItemSlot.$dofUsed>>
            <<hagHighlightBlockNoteAdd path=$dofItemSlot.$dofImage text="{$dofItemSlot.$dofName}">>
        <<else>>
            <<hagHighlightBlockNoteAdd path="{$dofImageInventoryEmptySlot}">>
        <<endif>>

        <<set $dofIndex to $dofIndex + 1>>
    <<endwhile>>
===

// Add equipment title
title: DofFunctionAddPlayerEquipmentTitle
---
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd text="{$dofTranslateEquipment}">>
===

// Add equipment items
title: DofFunctionAddPlayerEquipment
---
    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentNecklaceEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentHelmEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentRingEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentRightArmEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentBodyEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentLeftArmEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentQuick1EmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentBootsEmptySlot}">>

    <<hagHighlightBlockSet type=image>>
    <<hagHighlightBlockNoteAdd path="{$dofImageEquipmentQuick2EmptySlot}">>
===

/**
 * @brief Debug main stats
 * @param DofFunctionDebugStats_actor Actor name with stats to output
 */
title: DofFunctionDebugStats
---
<<box>>
    [u]dofStatConstitution[/u]     {$_actor.$dofStatConstitution} #line:eff237
    [u]dofStatListen[/u]           {$_actor.$dofStatListen} #line:81be2d
    [u]dofStatPerception[/u]       {$_actor.$dofStatPerception} #line:8411f5
    [u]dofStatSneak[/u]            {$_actor.$dofStatSneak} #line:c46df0
    [u]dofStatSpeed[/u]            {$_actor.$dofStatSpeed} #line:d32ac8
    [u]dofStatAttack[/u]           {$_actor.$dofStatAttack} #line:a70ff0
    [u]dofStatDefense[/u]          {$_actor.$dofStatDefense} #line:3183c1
<<endbox>>
===


/**
 * @brief Populates unit with random stats
 * previously set stats will not be erased
 * @param DofFunctionGenerateNpcRandomStats_actor Actor name with stats to populate
 * expected
 *  dofStatMax - max stat value
 *  dofStatMin - min stat value
 *  dofStatPointsLeft - stat points to distribute
 */
title: DofFunctionGenerateNpcRandomStats
---
    <<set $dofStatId                to 0>>

    // random point iteration
    <<while $_actor.$dofStatPointsLeft is not 0>>

        <<set $dofStatId to random($dofStatMinId, $dofStatMaxId)>>

        // Constitution
        <<if $dofStatId is $dofStatConstitutionId and $_actor.$dofStatConstitution < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatConstitution to $_actor.$dofStatConstitution + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Listen
        <<if $dofStatId is $dofStatListenId and $_actor.$dofStatListen < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatListen to $_actor.$dofStatListen + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Perception
        <<if $dofStatId is $dofStatPerceptionId and $_actor.$dofStatPerception < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatPerception to $_actor.$dofStatPerception + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Sneak
        <<if $dofStatId is $dofStatSneakId and $_actor.$dofStatSneak < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatSneak to $_actor.$dofStatSneak + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Speed
        <<if $dofStatId is $dofStatSpeedId and $_actor.$dofStatSpeed < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatSpeed to $_actor.$dofStatSpeed + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Attack
        <<if $dofStatId is $dofStatAttackId and $_actor.$dofStatAttack < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatAttack to $_actor.$dofStatAttack + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

        // Defense
        <<if $dofStatId is $dofStatDefenseId and $_actor.$dofStatDefense < $_actor.$dofStatMax>>
            <<set $_actor.$dofStatDefense to $_actor.$dofStatDefense + 1>>
            <<set $_actor.$dofStatPointsLeft to $_actor.$dofStatPointsLeft - 1>>
        <<endif>>

    <<endwhile>>
===

/**
 * @brief Regenerate HP of npc based on Constitution stat
 * @param DofFunctionRegenerateNpcHP_actor Npc name
 *  expected
 *      dofHP
 */
title: DofFunctionRegenerateNpcHP
---
    <<set $_maxhp to $_actor.$dofStatConstitution * $dofHPperConstitution>>
    <<if $_actor.$dofHP + $_actor.$dofStatConstitution > $_maxhp>>
        <<set $_actor.$dofHP to $_maxhp>>
    <<else>>
        <<set $_actor.$dofHP to $_actor.$dofHP + $_actor.$dofStatConstitution>>
    <<endif>>
===

/**
 * @brief Regenerate HP of player character based on Constitution stat
 */
title: DofFunctionRegeneratePlayerHP
---
    <<set $DofFunctionRegenerateNpcHP_actor to "dofPlayer">>
    <<hagCallNode name="DofFunctionRegenerateNpcHP">>
===

